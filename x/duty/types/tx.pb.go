// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: proto/duty/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MsgSetDutyMetadata defines the SetDutyMetadata message
type MsgSetDutyMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// signer is the consensus validator operator address (valoper...)
	Signer   string        `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	Metadata *DutyMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *MsgSetDutyMetadata) Reset() {
	*x = MsgSetDutyMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_duty_v1_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetDutyMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetDutyMetadata) ProtoMessage() {}

func (x *MsgSetDutyMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_duty_v1_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetDutyMetadata.ProtoReflect.Descriptor instead.
func (*MsgSetDutyMetadata) Descriptor() ([]byte, []int) {
	return file_proto_duty_v1_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgSetDutyMetadata) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *MsgSetDutyMetadata) GetMetadata() *DutyMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// MsgRotateCheckpointKey defines the RotateCheckpointKey message
type MsgRotateCheckpointKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// signer is the consensus validator operator address (valoper...)
	Signer string `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	// new_checkpoint_pub_key is the new ECDSA secp256k1 public key
	NewCheckpointPubKey string `protobuf:"bytes,2,opt,name=new_checkpoint_pub_key,json=newCheckpointPubKey,proto3" json:"new_checkpoint_pub_key,omitempty"`
	// attestation_signature is a signature proving ownership of the new key
	AttestationSignature string `protobuf:"bytes,3,opt,name=attestation_signature,json=attestationSignature,proto3" json:"attestation_signature,omitempty"`
}

func (x *MsgRotateCheckpointKey) Reset() {
	*x = MsgRotateCheckpointKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_duty_v1_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRotateCheckpointKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRotateCheckpointKey) ProtoMessage() {}

func (x *MsgRotateCheckpointKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_duty_v1_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRotateCheckpointKey.ProtoReflect.Descriptor instead.
func (*MsgRotateCheckpointKey) Descriptor() ([]byte, []int) {
	return file_proto_duty_v1_tx_proto_rawDescGZIP(), []int{1}
}

func (x *MsgRotateCheckpointKey) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *MsgRotateCheckpointKey) GetNewCheckpointPubKey() string {
	if x != nil {
		return x.NewCheckpointPubKey
	}
	return ""
}

func (x *MsgRotateCheckpointKey) GetAttestationSignature() string {
	if x != nil {
		return x.AttestationSignature
	}
	return ""
}

// MsgBindCheckpointKey defines the BindCheckpointKey message
type MsgBindCheckpointKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// signer is the consensus validator operator address (valoper...)
	Signer string `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	// checkpoint_pub_key is the ECDSA secp256k1 public key to bind
	CheckpointPubKey string `protobuf:"bytes,2,opt,name=checkpoint_pub_key,json=checkpointPubKey,proto3" json:"checkpoint_pub_key,omitempty"`
	// binding_signature is a signature proving the binding
	BindingSignature string `protobuf:"bytes,3,opt,name=binding_signature,json=bindingSignature,proto3" json:"binding_signature,omitempty"`
	// consensus_address is the consensus address to bind to
	ConsensusAddress string `protobuf:"bytes,4,opt,name=consensus_address,json=consensusAddress,proto3" json:"consensus_address,omitempty"`
}

func (x *MsgBindCheckpointKey) Reset() {
	*x = MsgBindCheckpointKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_duty_v1_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBindCheckpointKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBindCheckpointKey) ProtoMessage() {}

func (x *MsgBindCheckpointKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_duty_v1_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBindCheckpointKey.ProtoReflect.Descriptor instead.
func (*MsgBindCheckpointKey) Descriptor() ([]byte, []int) {
	return file_proto_duty_v1_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgBindCheckpointKey) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *MsgBindCheckpointKey) GetCheckpointPubKey() string {
	if x != nil {
		return x.CheckpointPubKey
	}
	return ""
}

func (x *MsgBindCheckpointKey) GetBindingSignature() string {
	if x != nil {
		return x.BindingSignature
	}
	return ""
}

func (x *MsgBindCheckpointKey) GetConsensusAddress() string {
	if x != nil {
		return x.ConsensusAddress
	}
	return ""
}

// DutyMetadata contains the duty metadata for a validator
type DutyMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// checkpoint_pub_key is the ECDSA secp256k1 public key used to sign Hyperlane checkpoints
	CheckpointPubKey string `protobuf:"bytes,1,opt,name=checkpoint_pub_key,json=checkpointPubKey,proto3" json:"checkpoint_pub_key,omitempty"`
	// checkpoint_storage_uri is the public location for signatures
	CheckpointStorageUri string `protobuf:"bytes,2,opt,name=checkpoint_storage_uri,json=checkpointStorageUri,proto3" json:"checkpoint_storage_uri,omitempty"`
}

func (x *DutyMetadata) Reset() {
	*x = DutyMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_duty_v1_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DutyMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DutyMetadata) ProtoMessage() {}

func (x *DutyMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_duty_v1_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DutyMetadata.ProtoReflect.Descriptor instead.
func (*DutyMetadata) Descriptor() ([]byte, []int) {
	return file_proto_duty_v1_tx_proto_rawDescGZIP(), []int{3}
}

func (x *DutyMetadata) GetCheckpointPubKey() string {
	if x != nil {
		return x.CheckpointPubKey
	}
	return ""
}

func (x *DutyMetadata) GetCheckpointStorageUri() string {
	if x != nil {
		return x.CheckpointStorageUri
	}
	return ""
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// SetDutyMetadata sets the duty metadata for a validator
	SetDutyMetadata(context.Context, *MsgSetDutyMetadata) (*emptypb.Empty, error)
	// RotateCheckpointKey rotates the checkpoint signing key for a validator
	RotateCheckpointKey(context.Context, *MsgRotateCheckpointKey) (*emptypb.Empty, error)
	// BindCheckpointKey creates a canonical binding between consensus validator and checkpoint key
	BindCheckpointKey(context.Context, *MsgBindCheckpointKey) (*emptypb.Empty, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (UnimplementedMsgServer) SetDutyMetadata(context.Context, *MsgSetDutyMetadata) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDutyMetadata not implemented")
}
func (UnimplementedMsgServer) RotateCheckpointKey(context.Context, *MsgRotateCheckpointKey) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RotateCheckpointKey not implemented")
}
func (UnimplementedMsgServer) BindCheckpointKey(context.Context, *MsgBindCheckpointKey) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindCheckpointKey not implemented")
}

// MsgClient is the client API for Msg service.
type MsgClient interface {
	// SetDutyMetadata sets the duty metadata for a validator
	SetDutyMetadata(ctx context.Context, in *MsgSetDutyMetadata, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// RotateCheckpointKey rotates the checkpoint signing key for a validator
	RotateCheckpointKey(ctx context.Context, in *MsgRotateCheckpointKey, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// BindCheckpointKey creates a canonical binding between consensus validator and checkpoint key
	BindCheckpointKey(ctx context.Context, in *MsgBindCheckpointKey, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type msgClient struct {
	cc grpc.ClientConnInterface
}

func NewMsgClient(cc grpc.ClientConnInterface) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) SetDutyMetadata(ctx context.Context, in *MsgSetDutyMetadata, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/duty.v1.Msg/SetDutyMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RotateCheckpointKey(ctx context.Context, in *MsgRotateCheckpointKey, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/duty.v1.Msg/RotateCheckpointKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BindCheckpointKey(ctx context.Context, in *MsgBindCheckpointKey, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/duty.v1.Msg/BindCheckpointKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
// All implementations must embed UnimplementedMsgServer
// for forward compatibility
type msgServer struct {
	UnimplementedMsgServer
}

func RegisterMsgServer(s grpc.ServiceRegistrar, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "duty.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetDutyMetadata",
			Handler:    _Msg_SetDutyMetadata_Handler,
		},
		{
			MethodName: "RotateCheckpointKey",
			Handler:    _Msg_RotateCheckpointKey_Handler,
		},
		{
			MethodName: "BindCheckpointKey",
			Handler:    _Msg_BindCheckpointKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/duty/v1/tx.proto",
}

func _Msg_SetDutyMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetDutyMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetDutyMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/duty.v1.Msg/SetDutyMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetDutyMetadata(ctx, req.(*MsgSetDutyMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RotateCheckpointKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRotateCheckpointKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RotateCheckpointKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/duty.v1.Msg/RotateCheckpointKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RotateCheckpointKey(ctx, req.(*MsgRotateCheckpointKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BindCheckpointKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBindCheckpointKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BindCheckpointKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/duty.v1.Msg/BindCheckpointKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BindCheckpointKey(ctx, req.(*MsgBindCheckpointKey))
	}
	return interceptor(ctx, in, info, handler)
}

var File_proto_duty_v1_tx_proto protoreflect.FileDescriptor

var file_proto_duty_v1_tx_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x75, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x64, 0x75, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x32, 0x8a, 0x02, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x4a, 0x0a, 0x0f,
	0x53, 0x65, 0x74, 0x44, 0x75, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x2e, 0x64, 0x75, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74,
	0x44, 0x75, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x4a, 0x0a, 0x12, 0x52, 0x6f, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x1d, 0x2e, 0x64, 0x75, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x6f,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4b, 0x65,
	0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x4a,
	0x0a, 0x10, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x1b, 0x2e, 0x64, 0x75, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73,
	0x67, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x03, 0x88, 0x02, 0x01, 0x42,
	0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x68,
	0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x44, 0x75,
	0x74, 0x79, 0x2f, 0x78, 0x2f, 0x64, 0x75, 0x74, 0x79, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_duty_v1_tx_proto_rawDescOnce sync.Once
	file_proto_duty_v1_tx_proto_rawDescData = file_proto_duty_v1_tx_proto_rawDesc
)

func file_proto_duty_v1_tx_proto_rawDescGZIP() []byte {
	file_proto_duty_v1_tx_proto_rawDescOnce.Do(func() {
		file_proto_duty_v1_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_duty_v1_tx_proto_rawDescData)
	})
	return file_proto_duty_v1_tx_proto_rawDescData
}

var file_proto_duty_v1_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_duty_v1_tx_proto_goTypes = []interface{}{
	(*MsgSetDutyMetadata)(nil),    // 0: duty.v1.MsgSetDutyMetadata
	(*MsgRotateCheckpointKey)(nil), // 1: duty.v1.MsgRotateCheckpointKey
	(*MsgBindCheckpointKey)(nil),   // 2: duty.v1.MsgBindCheckpointKey
	(*DutyMetadata)(nil),           // 3: duty.v1.DutyMetadata
	(*emptypb.Empty)(nil),          // 4: google.protobuf.Empty
}
var file_proto_duty_v1_tx_proto_depIdxs = []int32{
	3, // 0: duty.v1.MsgSetDutyMetadata.metadata:type_name -> duty.v1.DutyMetadata
	0, // 1: duty.v1.Msg.SetDutyMetadata:input_type -> duty.v1.MsgSetDutyMetadata
	1, // 2: duty.v1.Msg.RotateCheckpointKey:input_type -> duty.v1.MsgRotateCheckpointKey
	2, // 3: duty.v1.Msg.BindCheckpointKey:input_type -> duty.v1.MsgBindCheckpointKey
	4, // 4: duty.v1.Msg.SetDutyMetadata:output_type -> google.protobuf.Empty
	4, // 5: duty.v1.Msg.RotateCheckpointKey:output_type -> google.protobuf.Empty
	4, // 6: duty.v1.Msg.BindCheckpointKey:output_type -> google.protobuf.Empty
}

func init() { file_proto_duty_v1_tx_proto_init() }
func file_proto_duty_v1_tx_proto_init() {
	if File_proto_duty_v1_tx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_duty_v1_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetDutyMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_duty_v1_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRotateCheckpointKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_duty_v1_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBindCheckpointKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_duty_v1_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DutyMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_duty_v1_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_duty_v1_tx_proto_goTypes,
		DependencyIndexes: file_proto_duty_v1_tx_proto_depIdxs,
		MessageInfos:      file_proto_duty_v1_tx_proto_msgTypes,
	}.Build()
	File_proto_duty_v1_tx_proto = out.File
	file_proto_duty_v1_tx_proto_rawDesc = nil
	file_proto_duty_v1_tx_proto_goTypes = nil
	file_proto_duty_v1_tx_proto_depIdxs = nil
}
